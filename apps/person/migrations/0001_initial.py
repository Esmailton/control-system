# Generated by Django 4.2.1 on 2023-05-16 01:17

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='City')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'Citys',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countrys',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Full Name')),
                ('document', models.CharField(max_length=14, unique=True, verbose_name='Document CPF/CNPJ')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
            },
        ),
        migrations.CreateModel(
            name='UF',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='State')),
                ('acronym', models.CharField(max_length=2, unique=True, verbose_name='Acronym')),
                ('country', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='country_uf', to='person.country', verbose_name='Country')),
            ],
            options={
                'verbose_name': 'UF',
                'verbose_name_plural': 'UFs',
            },
        ),
        migrations.CreateModel(
            name='Neighborhood',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Neighborhood')),
                ('city', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='city_neighborhood', to='person.city')),
            ],
            options={
                'verbose_name': 'Neighborhood',
                'verbose_name_plural': 'Neighborhoods',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('number_contact', models.CharField(max_length=14, verbose_name='Number contact')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_contact', to='person.person')),
            ],
            options={
                'verbose_name': 'Contact',
                'verbose_name_plural': 'Contacts',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='uf',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='uf_city', to='person.uf'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('logradouro', models.CharField(max_length=255, verbose_name='Logradouro')),
                ('number', models.IntegerField(verbose_name='Number')),
                ('zipcode', models.CharField(blank=True, max_length=9, null=True, verbose_name='Zip Code')),
                ('neighborhood', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='neighborhood_address', to='person.neighborhood', verbose_name='Neighborhood')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_address', to='person.person')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Address',
            },
        ),
        migrations.AddConstraint(
            model_name='neighborhood',
            constraint=models.UniqueConstraint(models.F('name'), models.F('city'), name='unique_neighborhood_city'),
        ),
        migrations.AddConstraint(
            model_name='city',
            constraint=models.UniqueConstraint(models.F('name'), models.F('uf'), name='unique_uf_city'),
        ),
    ]
